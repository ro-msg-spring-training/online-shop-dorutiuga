{
	"info": {
		"_postman_id": "9d6a39ec-9eda-4b1b-81ee-ca9f25ab9c0b",
		"name": "ShopApplicationPostmanTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21482769"
	},
	"item": [
		{
			"name": "Order Creation successfully",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Success', function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							" const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Object is contained\", () => {\r",
							"   const expectedObject = {\r",
							"     \"productsOrdered\": [\r",
							"         {\r",
							"             \"productId\": 1,\r",
							"             \"quantity\": 1\r",
							"         }\r",
							"     ],\r",
							"     \"deliveryAddress\": {\r",
							"         \"addressCountry\": \"someCountry\",\r",
							"         \"addressCounty\": \"someCounty\",\r",
							"         \"addressCity\": \"someCity\",\r",
							"         \"addressStreet\": \"someStreet\"\r",
							"     }\r",
							" }\r",
							"     pm.expect(jsonData).to.deep.include(expectedObject);\r",
							" });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "test",
							"type": "string"
						},
						{
							"key": "username",
							"value": "test",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"productsOrdered\": [{\r\n        \"productId\": 3,\r\n        \"quantity\": 1\r\n    }\r\n   ],\r\n    \"createdAt\": \"\",\r\n    \"deliveryAddress\": {\r\n        \"addressCountry\": \"someCountry\",\r\n        \"addressCounty\": \"someCounty\",\r\n        \"addressCity\": \"someCity\",\r\n        \"addressStreet\": \"someStreet\"\r\n    }\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/orders/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"orders",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "csv-export",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response is ok\",function(){\r",
							"pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"csv-respose success\",function(){\r",
							"const parse = require('csv-parse/lib/sync');\r",
							"const responseJson = parse(pm.response.text());\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "test",
							"type": "string"
						},
						{
							"key": "username",
							"value": "test",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/csv-export/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"csv-export",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Order Creation with failure due to missing Stock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Cannot create order due to missing stock', function () {\r",
							"    pm.response.to.have.status(500)\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"Fail to create order \", function(){\r",
							"   const $ = cheerio.load(pm.response.text());\r",
							"\r",
							"\r",
							"const data = ($(\"body\").text()); \r",
							"pm.expect(data).to.contains(\"The product 2 is not in our stock right now\")\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "test",
							"type": "string"
						},
						{
							"key": "username",
							"value": "test",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"productsOrdered\": [{\r\n        \"productId\": 2,\r\n        \"quantity\": 100\r\n    }\r\n   ],\r\n    \"createdAt\": \"\",\r\n    \"deliveryAddress\": {\r\n        \"addressCountry\": \"someCountry\",\r\n        \"addressCounty\": \"someCounty\",\r\n        \"addressCity\": \"someCity\",\r\n        \"addressStreet\": \"someStreet\"\r\n    }\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/orders/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"orders",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "OrderCreation with failure due to unknown id",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}